---
- job:
    name: elastic+apm-agent-python+master+periodic-full-matrix
    display-name: 'elastic / apm-agent-python # master / full matrix'
    description: Testing of the APM Python Agent master branch with full matrix.
    project-type: multijob
    parameters:
    - string:
        name: branch_specifier
        default: refs/heads/master
        description: the Git branch specifier to build (&lt;branchName&gt;, &lt;tagName&gt;,
          &lt;commitId&gt;, etc.)
    properties:
    - github:
        url: https://github.com/elastic/apm-agent-python/
    - inject:
        properties-content: |-
          HOME=$JENKINS_HOME
          PIP_CACHE=.cache/pip
        name: branch_specifier
        default: refs/heads/master
        description: the Git branch specifier to build (&lt;branchName&gt;, &lt;tagName&gt;,
          &lt;commitId&gt;, etc.)
    node: master
    scm:
    - git:
        name: origin
        credentials-id: f6c7695a-671e-4f4f-a331-acdce44ff9ba
        reference-repo: /var/lib/jenkins/.git-references/apm-agent-python.git
        branches:
        - ${branch_specifier}
        url: https://github.com/elastic/apm-agent-python.git
        basedir: src/github.com/elastic/apm-agent-python
        wipe-workspace: 'True'
    axes:
    - axis:
        type: slave
        name: label
        values:
        - linux
    - axis:
        type: yaml
        filename: src/github.com/elastic/apm-agent-python/tests/.jenkins_framework_full.yml
        name: FRAMEWORK
    - axis:
        type: yaml
        filename: src/github.com/elastic/apm-agent-python/tests/.jenkins_python.yml
        name: PYTHON_VERSION
    yaml-strategy:
      exclude-key: exclude
      filename: src/github.com/elastic/apm-agent-python/tests/.jenkins_exclude.yml
    vault:
      role_id: 35ad5918-eab7-c814-f8be-a305c811732e
    wrappers:
    - ansicolor
    - timeout:
        type: absolute
        timeout: 360
        fail: true
    - timestamps
    - workspace-cleanup
    builders:
    - shell: |-
        #!/usr/local/bin/runbld
        ./tests/scripts/docker/cleanup.sh
        set +x
        VAULT_TOKEN=$( curl -s -X POST -H "Content-Type: application/json" -L -d "{\"role_id\":\"$VAULT_ROLE_ID\",\"secret_id\":\"$VAULT_SECRET_ID\"}" $VAULT_ADDR/v1/auth/approle/login | jq -r '.auth.client_token' )
        export CODECOV_TOKEN=$( curl -s -L -H "X-Vault-Token:$VAULT_TOKEN" $VAULT_ADDR/v1/secret/apm-team/ci/codecov | jq -r '.data.token' )
        set -x
        ./tests/scripts/docker/run_tests.sh $PYTHON_VERSION $FRAMEWORK
    publishers:
    - junit:
        results: '**/tests/python-agent-junit.xml'
        keep-long-stdio: true
        allow-empty-results: true
