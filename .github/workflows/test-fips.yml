
# run test suite inside a FIPS 140 container
name: test-fips

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * 1'

permissions:
  contents: read

jobs:
  create-matrix:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - id: generate
        uses: elastic/oblt-actions/version-framework@31e93d1dfb82adc106fc7820f505db1afefe43b1 # v1
        with:
          versions-file: .ci/.matrix_python_fips.yml
          frameworks-file: .ci/.matrix_framework_fips.yml

  test-fips:
    needs: create-matrix
    runs-on: ubuntu-24.04
    # https://docs.github.com/en/actions/writing-workflows/choosing-where-your-workflow-runs/running-jobs-in-a-container
    # docker run -it --rm --name fipsy docker.elastic.co/wolfi/python-fips:3.12
    container:
      image: docker.elastic.co/wolfi/python-fips:3.13.1-r1-dev@sha256:607490d7da8d78a189e98b3e026f9160180d937efd4afc40ac41a9e59031db35
      options: --user root
      credentials:
        username: ${{ secrets.ELASTIC_DOCKER_USERNAME }}
        password: ${{ secrets.ELASTIC_DOCKER_PASSWORD }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: ${{ fromJSON(needs.create-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: check that python has fips mode enabled
        run: |
          python3 -c 'import _hashlib; assert _hashlib.get_fips_mode() == 1'
      - name: install run_tests.sh requirements
        run: apk add netcat-openbsd tzdata
      - name: Run tests
        run: ./tests/scripts/run_tests.sh
        env:
          FRAMEWORK: ${{ matrix.framework }}

  notify-on-failure:
    if: always()
    runs-on: ubuntu-24.04
    needs: test-fips
    steps:
      - id: check
        uses: elastic/oblt-actions/check-dependent-jobs@31e93d1dfb82adc106fc7820f505db1afefe43b1 # v1
        with:
          jobs: ${{ toJSON(needs) }}
      - name: Notify in Slack
        if: steps.check.outputs.status == 'failure'
        uses: elastic/oblt-actions/slack/notify-result@31e93d1dfb82adc106fc7820f505db1afefe43b1 # v1
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          status: ${{ steps.check.outputs.status }}
          channel-id: "#apm-agent-python"
