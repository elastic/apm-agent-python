[[azure-functions-support]]
=== Monitoring Azure Functions

[float]
==== Prerequisites

You need an APM Server to which you can send APM data.
Follow the {apm-guide-ref}/apm-quick-start.html[APM Quick start] if you have not set one up yet.
For the best-possible performance, we recommend setting up APM on {ecloud} in the same Azure region as your Azure Functions app.

NOTE: Currently, only HTTP and timer triggers are supported.
Other trigger types may be captured as well, but the amount of captured contextual data may differ.

[float]
==== Step 1: Enable Worker Extensions

Elastic APM uses https://learn.microsoft.com/en-us/azure/azure-functions/functions-reference-python?tabs=asgi%2Capplication-level&pivots=python-mode-configuration#python-worker-extensions[Worker Extensions]
to instrument Azure Functions.
This feature is not enabled by default, and must be enabled in your Azure Functions App.
Please follow the instructions in the https://learn.microsoft.com/en-us/azure/azure-functions/functions-reference-python?tabs=asgi%2Capplication-level&pivots=python-mode-configuration#using-extensions[Azure docs].

Once you have enabled Worker Extensions, these two lines of code will enable Elastic APM's extension:

[source,python]
----
from elasticapm.contrib.serverless.azure import ElasticAPMExtension

ElasticAPMExtension.configure()
----

Put them somewhere at the top of your Python file, before the function definitions.

[float]
==== Step 2: Install the APM Python Agent

You need to add `elastic-apm` as a dependency for your Functions app.
Simply add `elastic-apm` to your `requirements.txt` file.
We recommend pinning the version to the current newest version of the agent, and periodically updating the version.

[float]
==== Step 3: Configure APM on Azure Functions

The APM Python agent is configured through https://learn.microsoft.com/en-us/azure/azure-functions/functions-how-to-use-azure-function-app-settings?tabs=portal#settings[App Settings].
These are then picked up by the agent as environment variables.

For the minimal configuration, you will need the <<config-server-url,`ELASTIC_APM_SERVER_URL`>> to set the destination for APM data and a <<config-secret-token,`ELASTIC_APM_SECRET_TOKEN`>>.
If you prefer to use an {apm-guide-ref}/api-key.html[APM API key] instead of the APM secret token, use the <<config-api-key,`ELASTIC_APM_API_KEY`>> environment variable instead of `ELASTIC_APM_SECRET_TOKEN` in the following example configuration.

[source,bash]
----
$ az functionapp config appsettings set --settings ELASTIC_APM_SERVER_URL=https://example.apm.northeurope.azure.elastic-cloud.com:443
$ az functionapp config appsettings set --settings ELASTIC_APM_SECRET_TOKEN=verysecurerandomstring
----

You can optionally <<configuration,fine-tune the Python agent>>.

That's it; Once the agent is installed and working, spans will be captured for
<<supported-technologies,supported technologies>>. You can also use
<<api-capture-span,`capture_span`>> to capture custom spans, and
you can retrieve the `Client` object for capturing exceptions/messages
using <<api-get-client,`get_client`>>.
