[[automatic-instrumentation]]
== Automatic Instrumentation

The Python APM agent comes with automatic instrumentation of various 3rd party modules and standard library modules.

[[automatic-instrumentation-db]]
=== Databases

[[automatic-instrumentation-db-sqlite]]
==== SQLite

Instrumented methods:

 * `sqlite3.connect`
 * `sqlite3.dbapi2.connect`
 * `pysqlite2.dbapi2.connect`
 
The instrumented `connect` method returns a wrapped connection/cursor which instruments the actual `Cursor.execute` calls.

Collected trace data:

 * parametrized SQL query



[[automatic-instrumentation-db-mysql]]
==== MySQL

Instrumented methods:

 * `MySQLdb.connect`
 
The instrumented `connect` method returns a wrapped connection/cursor which instruments the actual `Cursor.execute` calls.

Collected trace data:

 * parametrized SQL query

[[automatic-instrumentation-db-postgres]]
==== PostgreSQL

Instrumented methods:

 * `psycopg2.connect`
 
The instrumented `connect` method returns a wrapped connection/cursor which instruments the actual `Cursor.execute` calls.

Collected trace data:

 * parametrized SQL query

[[automatic-instrumentation-db-mongodb]]
==== MongoDB

Instrumented methods:

 * `pymongo.collection.Collection.aggregate`
 * `pymongo.collection.Collection.bulk_write`
 * `pymongo.collection.Collection.count`
 * `pymongo.collection.Collection.create_index`
 * `pymongo.collection.Collection.create_indexes`
 * `pymongo.collection.Collection.delete_many`
 * `pymongo.collection.Collection.delete_one`
 * `pymongo.collection.Collection.distinct`
 * `pymongo.collection.Collection.drop`
 * `pymongo.collection.Collection.drop_index`
 * `pymongo.collection.Collection.drop_indexes`
 * `pymongo.collection.Collection.ensure_index`
 * `pymongo.collection.Collection.find_and_modify`
 * `pymongo.collection.Collection.find_one`
 * `pymongo.collection.Collection.find_one_and_delete`
 * `pymongo.collection.Collection.find_one_and_replace`
 * `pymongo.collection.Collection.find_one_and_update`
 * `pymongo.collection.Collection.group`
 * `pymongo.collection.Collection.inline_map_reduce`
 * `pymongo.collection.Collection.insert`
 * `pymongo.collection.Collection.insert_many`
 * `pymongo.collection.Collection.insert_one`
 * `pymongo.collection.Collection.map_reduce`
 * `pymongo.collection.Collection.reindex`
 * `pymongo.collection.Collection.remove`
 * `pymongo.collection.Collection.rename`
 * `pymongo.collection.Collection.replace_one`
 * `pymongo.collection.Collection.save`
 * `pymongo.collection.Collection.update`
 * `pymongo.collection.Collection.update_many`
 * `pymongo.collection.Collection.update_one`

Collected trace data:

 * database name
 * method name


[[automatic-instrumentation-http]]
=== External HTTP requests


[[automatic-instrumentation-urllib3]]
==== urllib3

Instrumented methods:

 * `urllib3.connectionpool.HTTPConnectionPool.urlopen`
 
Collected trace data:

 * HTTP method
 * requested URL
 
[[automatic-instrumentation-requests]]
==== requests

Instrumented methods:

 * `requests.sessions.Session.send`
 
Collected trace data:

 * HTTP method
 * requested URL
