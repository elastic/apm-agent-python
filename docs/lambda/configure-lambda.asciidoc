// tag::console-extension-only[]

To configure APM through the AWS Management Console:

1. Navigate to your function in the AWS Management Console
2. Click on the _Configuration_ tab
3. Click on _Environment variables_
4. Add the following required variables:

[source,bash]
----
ELASTIC_APM_LAMBDA_APM_SERVER = <YOUR-APM-SERVER-URL>     # this is your APM Server URL
ELASTIC_APM_SECRET_TOKEN      = <YOUR-APM-SECRET-TOKEN>   # this is your APM secret token
ELASTIC_APM_SEND_STRATEGY     = background                <1>
----

--
include::{apm-aws-lambda-root}/docs/images/images.asciidoc[tag=python-env-vars]
--

// end::console-extension-only[]

// tag::cli-extension-only[]

To configure APM through the AWS command line interface execute the following command:

[source,bash]
----
aws lambda update-function-configuration --function-name yourLambdaFunctionName \
    --environment "Variables={ELASTIC_APM_LAMBDA_APM_SERVER=<YOUR-APM-SERVER-URL>,ELASTIC_APM_SECRET_TOKEN=<YOUR-APM-SECRET-TOKEN>,ELASTIC_APM_SEND_STRATEGY=background}" <1>
----

// end::cli-extension-only[]

// tag::sam-extension-only[]

In your SAM `template.yml` file configure the following environment variables:

[source,yml]
----
...
Resources:
  yourLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      ...
      Environment:
          Variables:
            ELASTIC_APM_LAMBDA_APM_SERVER: <YOUR-APM-SERVER-URL>
            ELASTIC_APM_SECRET_TOKEN: <YOUR-APM-SECRET-TOKEN>
            ELASTIC_APM_SEND_STRATEGY: background <1>
...
----

// end::sam-extension-only[]

// tag::serverless-extension-only[]

In your `serverless.yml` file configure the following environment variables:

[source,yml]
----
...
functions:
  yourLambdaFunction:
    ...
    environment:
      ELASTIC_APM_LAMBDA_APM_SERVER: <YOUR-APM-SERVER-URL>
      ELASTIC_APM_SECRET_TOKEN: <YOUR-APM-SECRET-TOKEN>
      ELASTIC_APM_SEND_STRATEGY: background <1>
...
----

// end::serverless-extension-only[]

// tag::terraform-extension-only[]
In your Terraform file configure the following environment variables:

[source,terraform]
----
...
resource "aws_lambda_function" "your_lambda_function" {
  ...
  environment {
    variables = {
      ELASTIC_APM_LAMBDA_APM_SERVER = "<YOUR-APM-SERVER-URL>"
      ELASTIC_APM_SECRET_TOKEN      = "<YOUR-APM-SECRET-TOKEN>"
      ELASTIC_APM_SEND_STRATEGY     = "background" <1>
    }
  }
}
...
----

// end::terraform-extension-only[]

// tag::container-extension-only[]
Environment variables configured for an AWS Lambda function are passed to the container running the lambda function.
You can use one of the other options (through AWS Web Console, AWS CLI, etc.) to configure the following environment variables:

[source,bash]
----
ELASTIC_APM_LAMBDA_APM_SERVER = <YOUR-APM-SERVER-URL>     # this is your APM Server URL
ELASTIC_APM_SECRET_TOKEN      = <YOUR-APM-SECRET-TOKEN>   # this is your APM secret token
ELASTIC_APM_SEND_STRATEGY     = background <1>
----

// end::container-extension-only[]
