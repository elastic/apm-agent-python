[[configuration]]
== Configuration

To adapt the Elastic APM agent to your needs, you can configure it using environment variables, or framework specific
configuration.

[float]
[[django-configuration]]
=== Django

To configure Django, add an `ELASTIC_APM` dictionary to your `settings.py`:

[source,python]
----
ELASTIC_APM = {
    'APP_NAME': 'my-app',
    'SECRET_TOKEN': 'changeme,
}
----

[float]
[[flask-configuration]]
=== Flask

To configure Flask, add an `ELASTIC_APM` dictonary to your `app.config`:

[source,python]
----
app.config['ELASTIC_APM'] = {
    'APP_NAME': 'my-app',
    'SECRET_TOKEN': 'changeme,
}

apm = ElasticAPM(app)
----

[float]
[[required-options]]
=== Required options

[float]
[[config-app-name]]
==== `app_name`

  * Environment: `ELASTIC_APM_APP_NAME`
  * Django/Flask: `APP_NAME`
  * Example: `my-app`

The name of your app.
This is used to keep all the errors and transactions of your app together and is the primary filter in the Elastic APM user interface.

NOTE: The app name must conform to this regular expression: `^[a-zA-Z0-9 _-]+$`.
In less regexy terms: Your app name must only contain characters from the ASCII alphabet, numbers, dashes, underscores and spaces.

[float]
[[config-servers]]
==== `servers`

 * Environment: `ELASTIC_APM_SERVERS`, multiple values separated by commas, without spaces
 * Django/Flask: `ELASTIC_APM`
 * Default: `['http://localhost:8200']`

A list of URLs for your APM Servers. The URL must be fully qualified, including protocol (`http` or `https`) and port.

NOTE: if you configure multiple servers, errors and transactions are sent to each server.

[float]
[[other-options]]
=== Other options

[float]
[[config-secret-token]]
==== `secret_token`

 * Environment: `ELASTIC_APM_SECRET_TOKEN`
 * Django/Flask: `SECRET_TOKEN`
 * Example: A random string

This string is used to ensure that only your agents can send data to your APM servers.
Both the agents and the APM servers have to be configured with the same secret token. One example to generate a secure
secret token is:

[source,bash]
----
python -c "import uuid; print(str(uuid.uuid4()))"
----

WARNING: secret tokens only provide any security if your APM servers use TLS.

